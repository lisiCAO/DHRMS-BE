server.port=8080
spring.application.name=property-service

spring.data.mongodb.uri=mongodb://mongo.default.svc.cluster.local:27017/property-service
spring.kafka.bootstrap-servers=broker.default.svc.cluster.local:29092

eureka.client.service-url.defaultZone=http://eureka:password@discovery-server.default.svc.cluster.local:8761/eureka/
eureka.instance.hostname=property-service.default.svc.cluster.local
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

spring.kafka.template.default-topic=propertiesTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.lisi.booknavigator.propertyservice.event.PropertyEvent


management.zipkin.tracing.endpoint=http://zipkin.default.svc.cluster.local:9411/api/v2/spans
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak.default.svc.cluster.local:8080/realms/spring-boot-microservices-realm
management.endpoints.web.exposure.include=prometheus
