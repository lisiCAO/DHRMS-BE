version: '3.7'
networks:
  microservices-network:
    driver: bridge

services:
  postgres-dhrms:
    container_name: postgres-dhrms
    image: postgres
    environment:
      POSTGRES_USER: lisi
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-dhrms:/data/postgres
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: always
    networks:
      - microservices-network

  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db
    networks:
      - microservices-network

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:8.3
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    networks:
      - microservices-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.7
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql
    networks:
      - microservices-network

  zookeeper:
    platform: linux/arm64
    image: confluentinc/cp-zookeeper:latest-ubi8.arm64
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  broker:
    platform: linux/arm64
    image: confluentinc/cp-kafka:latest-ubi8.arm64
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-network

  discovery-server:
    platform: linux/arm64
    image: lisicao/discovery-server:latest
    container_name: discovery-server
    
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
    networks:
      - microservices-network

  api-gateway:
    platform: linux/arm64
    image: lisicao/api-gateway:latest
    container_name: api-gateway
    
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak
    networks:
      - microservices-network

  product-service:
    platform: linux/arm64
    container_name: product-service
    image: lisicao/product-service:latest
    
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/product-service
    depends_on:
      - mongo
      - discovery-server
      - api-gateway
    networks:
      - microservices-network

  order-service:
    platform: linux/arm64
    container_name: order-service
    image: lisicao/order-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-dhrms:5432/order-service
    depends_on:
      - postgres-dhrms
      - broker
      - zipkin
      - discovery-server
      - api-gateway
    networks:
      - microservices-network

  inventory-service:
    platform: linux/arm64
    container_name: inventory-service
    image: lisicao/inventory-service:latest
    
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-dhrms:5432/inventory-service
    depends_on:
      - postgres-dhrms
      - discovery-server
      - api-gateway
    networks:
      - microservices-network

  property-service:
    platform: linux/arm64
    container_name: property-service
    image: lisicao/property-service:latest

    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/property-service
    depends_on:
      - mongo
      - discovery-server
      - api-gateway
    networks:
      - microservices-network

  search-service:
    platform: linux/arm64
    container_name: search-service
    image: lisicao/search-service:latest
    
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - OPENAI_API_KEY=test
    depends_on:
      - elasticsearch
      - product-service
      - discovery-server
      - api-gateway
    networks:
      - microservices-network

  notification-service:
    platform: linux/arm64
    container_name: notification-service
    image: lisicao/notification-service:latest
    
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway
    networks:
      - microservices-network

  elasticsearch:
    image: elasticsearch:8.12.2
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - microservices-network

  kibana:
    image: kibana:8.12.2
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - microservices-network

  lease-service:
    platform: linux/arm64
    container_name: lease-service
    image: lisicao/lease-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-dhrms:5432/lease-service
    depends_on:
      - postgres-dhrms
      - broker
      - zipkin
      - discovery-server
      - api-gateway
    networks:
      - microservices-network